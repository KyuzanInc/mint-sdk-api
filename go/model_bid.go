/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Bid struct for Bid
type Bid struct {
	Id string `json:"id"`
	ChainType ChainType `json:"chainType"`
	NetworkId NetworkId `json:"networkId"`
	CreateAt time.Time `json:"createAt"`
	UpdateAt time.Time `json:"updateAt"`
	ItemDocumentId string `json:"itemDocumentId"`
	Bidder string `json:"bidder"`
	BidPrice float32 `json:"bidPrice"`
	CryptoCurrencyRate CryptoCurrencyRate `json:"cryptoCurrencyRate"`
	TransactionAt time.Time `json:"transactionAt"`
	TransactionHash string `json:"transactionHash"`
}

// NewBid instantiates a new Bid object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBid(id string, chainType ChainType, networkId NetworkId, createAt time.Time, updateAt time.Time, itemDocumentId string, bidder string, bidPrice float32, cryptoCurrencyRate CryptoCurrencyRate, transactionAt time.Time, transactionHash string) *Bid {
	this := Bid{}
	this.Id = id
	this.ChainType = chainType
	this.NetworkId = networkId
	this.CreateAt = createAt
	this.UpdateAt = updateAt
	this.ItemDocumentId = itemDocumentId
	this.Bidder = bidder
	this.BidPrice = bidPrice
	this.CryptoCurrencyRate = cryptoCurrencyRate
	this.TransactionAt = transactionAt
	this.TransactionHash = transactionHash
	return &this
}

// NewBidWithDefaults instantiates a new Bid object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBidWithDefaults() *Bid {
	this := Bid{}
	return &this
}

// GetId returns the Id field value
func (o *Bid) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Bid) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Bid) SetId(v string) {
	o.Id = v
}

// GetChainType returns the ChainType field value
func (o *Bid) GetChainType() ChainType {
	if o == nil {
		var ret ChainType
		return ret
	}

	return o.ChainType
}

// GetChainTypeOk returns a tuple with the ChainType field value
// and a boolean to check if the value has been set.
func (o *Bid) GetChainTypeOk() (*ChainType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainType, true
}

// SetChainType sets field value
func (o *Bid) SetChainType(v ChainType) {
	o.ChainType = v
}

// GetNetworkId returns the NetworkId field value
func (o *Bid) GetNetworkId() NetworkId {
	if o == nil {
		var ret NetworkId
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *Bid) GetNetworkIdOk() (*NetworkId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *Bid) SetNetworkId(v NetworkId) {
	o.NetworkId = v
}

// GetCreateAt returns the CreateAt field value
func (o *Bid) GetCreateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value
// and a boolean to check if the value has been set.
func (o *Bid) GetCreateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateAt, true
}

// SetCreateAt sets field value
func (o *Bid) SetCreateAt(v time.Time) {
	o.CreateAt = v
}

// GetUpdateAt returns the UpdateAt field value
func (o *Bid) GetUpdateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdateAt
}

// GetUpdateAtOk returns a tuple with the UpdateAt field value
// and a boolean to check if the value has been set.
func (o *Bid) GetUpdateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateAt, true
}

// SetUpdateAt sets field value
func (o *Bid) SetUpdateAt(v time.Time) {
	o.UpdateAt = v
}

// GetItemDocumentId returns the ItemDocumentId field value
func (o *Bid) GetItemDocumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemDocumentId
}

// GetItemDocumentIdOk returns a tuple with the ItemDocumentId field value
// and a boolean to check if the value has been set.
func (o *Bid) GetItemDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemDocumentId, true
}

// SetItemDocumentId sets field value
func (o *Bid) SetItemDocumentId(v string) {
	o.ItemDocumentId = v
}

// GetBidder returns the Bidder field value
func (o *Bid) GetBidder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bidder
}

// GetBidderOk returns a tuple with the Bidder field value
// and a boolean to check if the value has been set.
func (o *Bid) GetBidderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bidder, true
}

// SetBidder sets field value
func (o *Bid) SetBidder(v string) {
	o.Bidder = v
}

// GetBidPrice returns the BidPrice field value
func (o *Bid) GetBidPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BidPrice
}

// GetBidPriceOk returns a tuple with the BidPrice field value
// and a boolean to check if the value has been set.
func (o *Bid) GetBidPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BidPrice, true
}

// SetBidPrice sets field value
func (o *Bid) SetBidPrice(v float32) {
	o.BidPrice = v
}

// GetCryptoCurrencyRate returns the CryptoCurrencyRate field value
func (o *Bid) GetCryptoCurrencyRate() CryptoCurrencyRate {
	if o == nil {
		var ret CryptoCurrencyRate
		return ret
	}

	return o.CryptoCurrencyRate
}

// GetCryptoCurrencyRateOk returns a tuple with the CryptoCurrencyRate field value
// and a boolean to check if the value has been set.
func (o *Bid) GetCryptoCurrencyRateOk() (*CryptoCurrencyRate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CryptoCurrencyRate, true
}

// SetCryptoCurrencyRate sets field value
func (o *Bid) SetCryptoCurrencyRate(v CryptoCurrencyRate) {
	o.CryptoCurrencyRate = v
}

// GetTransactionAt returns the TransactionAt field value
func (o *Bid) GetTransactionAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TransactionAt
}

// GetTransactionAtOk returns a tuple with the TransactionAt field value
// and a boolean to check if the value has been set.
func (o *Bid) GetTransactionAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionAt, true
}

// SetTransactionAt sets field value
func (o *Bid) SetTransactionAt(v time.Time) {
	o.TransactionAt = v
}

// GetTransactionHash returns the TransactionHash field value
func (o *Bid) GetTransactionHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionHash
}

// GetTransactionHashOk returns a tuple with the TransactionHash field value
// and a boolean to check if the value has been set.
func (o *Bid) GetTransactionHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionHash, true
}

// SetTransactionHash sets field value
func (o *Bid) SetTransactionHash(v string) {
	o.TransactionHash = v
}

func (o Bid) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["chainType"] = o.ChainType
	}
	if true {
		toSerialize["networkId"] = o.NetworkId
	}
	if true {
		toSerialize["createAt"] = o.CreateAt
	}
	if true {
		toSerialize["updateAt"] = o.UpdateAt
	}
	if true {
		toSerialize["itemDocumentId"] = o.ItemDocumentId
	}
	if true {
		toSerialize["bidder"] = o.Bidder
	}
	if true {
		toSerialize["bidPrice"] = o.BidPrice
	}
	if true {
		toSerialize["cryptoCurrencyRate"] = o.CryptoCurrencyRate
	}
	if true {
		toSerialize["transactionAt"] = o.TransactionAt
	}
	if true {
		toSerialize["transactionHash"] = o.TransactionHash
	}
	return json.Marshal(toSerialize)
}

type NullableBid struct {
	value *Bid
	isSet bool
}

func (v NullableBid) Get() *Bid {
	return v.value
}

func (v *NullableBid) Set(val *Bid) {
	v.value = val
	v.isSet = true
}

func (v NullableBid) IsSet() bool {
	return v.isSet
}

func (v *NullableBid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBid(val *Bid) *NullableBid {
	return &NullableBid{value: val, isSet: true}
}

func (v NullableBid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


