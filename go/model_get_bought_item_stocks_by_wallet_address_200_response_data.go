/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetBoughtItemStocksByWalletAddress200ResponseData struct for GetBoughtItemStocksByWalletAddress200ResponseData
type GetBoughtItemStocksByWalletAddress200ResponseData struct {
	ItemStocks []ItemStock `json:"itemStocks"`
}

// NewGetBoughtItemStocksByWalletAddress200ResponseData instantiates a new GetBoughtItemStocksByWalletAddress200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBoughtItemStocksByWalletAddress200ResponseData(itemStocks []ItemStock) *GetBoughtItemStocksByWalletAddress200ResponseData {
	this := GetBoughtItemStocksByWalletAddress200ResponseData{}
	this.ItemStocks = itemStocks
	return &this
}

// NewGetBoughtItemStocksByWalletAddress200ResponseDataWithDefaults instantiates a new GetBoughtItemStocksByWalletAddress200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBoughtItemStocksByWalletAddress200ResponseDataWithDefaults() *GetBoughtItemStocksByWalletAddress200ResponseData {
	this := GetBoughtItemStocksByWalletAddress200ResponseData{}
	return &this
}

// GetItemStocks returns the ItemStocks field value
func (o *GetBoughtItemStocksByWalletAddress200ResponseData) GetItemStocks() []ItemStock {
	if o == nil {
		var ret []ItemStock
		return ret
	}

	return o.ItemStocks
}

// GetItemStocksOk returns a tuple with the ItemStocks field value
// and a boolean to check if the value has been set.
func (o *GetBoughtItemStocksByWalletAddress200ResponseData) GetItemStocksOk() ([]ItemStock, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemStocks, true
}

// SetItemStocks sets field value
func (o *GetBoughtItemStocksByWalletAddress200ResponseData) SetItemStocks(v []ItemStock) {
	o.ItemStocks = v
}

func (o GetBoughtItemStocksByWalletAddress200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["itemStocks"] = o.ItemStocks
	}
	return json.Marshal(toSerialize)
}

type NullableGetBoughtItemStocksByWalletAddress200ResponseData struct {
	value *GetBoughtItemStocksByWalletAddress200ResponseData
	isSet bool
}

func (v NullableGetBoughtItemStocksByWalletAddress200ResponseData) Get() *GetBoughtItemStocksByWalletAddress200ResponseData {
	return v.value
}

func (v *NullableGetBoughtItemStocksByWalletAddress200ResponseData) Set(val *GetBoughtItemStocksByWalletAddress200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBoughtItemStocksByWalletAddress200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBoughtItemStocksByWalletAddress200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBoughtItemStocksByWalletAddress200ResponseData(val *GetBoughtItemStocksByWalletAddress200ResponseData) *NullableGetBoughtItemStocksByWalletAddress200ResponseData {
	return &NullableGetBoughtItemStocksByWalletAddress200ResponseData{value: val, isSet: true}
}

func (v NullableGetBoughtItemStocksByWalletAddress200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBoughtItemStocksByWalletAddress200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


