/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ProductERC721 struct for ProductERC721
type ProductERC721 struct {
	Id string `json:"id"`
	CreateAt time.Time `json:"createAt"`
	UpdateAt time.Time `json:"updateAt"`
	Status string `json:"status"`
	TokenStandardType TokenStandardType `json:"tokenStandardType"`
	ContractERC721Id string `json:"contractERC721Id"`
	TokenId float32 `json:"tokenId"`
	TokenURI NullableString `json:"tokenURI"`
	CreatorAddress string `json:"creatorAddress"`
	Metadata map[string]interface{} `json:"metadata"`
	ItemStockDocumentId NullableString `json:"itemStockDocumentId"`
	ProductBlueprintId NullableString `json:"productBlueprintId"`
	ProductGroupId NullableString `json:"productGroupId"`
}

// NewProductERC721 instantiates a new ProductERC721 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductERC721(id string, createAt time.Time, updateAt time.Time, status string, tokenStandardType TokenStandardType, contractERC721Id string, tokenId float32, tokenURI NullableString, creatorAddress string, metadata map[string]interface{}, itemStockDocumentId NullableString, productBlueprintId NullableString, productGroupId NullableString) *ProductERC721 {
	this := ProductERC721{}
	this.Id = id
	this.CreateAt = createAt
	this.UpdateAt = updateAt
	this.Status = status
	this.TokenStandardType = tokenStandardType
	this.ContractERC721Id = contractERC721Id
	this.TokenId = tokenId
	this.TokenURI = tokenURI
	this.CreatorAddress = creatorAddress
	this.Metadata = metadata
	this.ItemStockDocumentId = itemStockDocumentId
	this.ProductBlueprintId = productBlueprintId
	this.ProductGroupId = productGroupId
	return &this
}

// NewProductERC721WithDefaults instantiates a new ProductERC721 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductERC721WithDefaults() *ProductERC721 {
	this := ProductERC721{}
	var tokenStandardType TokenStandardType = ERC721
	this.TokenStandardType = tokenStandardType
	return &this
}

// GetId returns the Id field value
func (o *ProductERC721) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProductERC721) SetId(v string) {
	o.Id = v
}

// GetCreateAt returns the CreateAt field value
func (o *ProductERC721) GetCreateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetCreateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateAt, true
}

// SetCreateAt sets field value
func (o *ProductERC721) SetCreateAt(v time.Time) {
	o.CreateAt = v
}

// GetUpdateAt returns the UpdateAt field value
func (o *ProductERC721) GetUpdateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdateAt
}

// GetUpdateAtOk returns a tuple with the UpdateAt field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetUpdateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateAt, true
}

// SetUpdateAt sets field value
func (o *ProductERC721) SetUpdateAt(v time.Time) {
	o.UpdateAt = v
}

// GetStatus returns the Status field value
func (o *ProductERC721) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ProductERC721) SetStatus(v string) {
	o.Status = v
}

// GetTokenStandardType returns the TokenStandardType field value
func (o *ProductERC721) GetTokenStandardType() TokenStandardType {
	if o == nil {
		var ret TokenStandardType
		return ret
	}

	return o.TokenStandardType
}

// GetTokenStandardTypeOk returns a tuple with the TokenStandardType field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetTokenStandardTypeOk() (*TokenStandardType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenStandardType, true
}

// SetTokenStandardType sets field value
func (o *ProductERC721) SetTokenStandardType(v TokenStandardType) {
	o.TokenStandardType = v
}

// GetContractERC721Id returns the ContractERC721Id field value
func (o *ProductERC721) GetContractERC721Id() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractERC721Id
}

// GetContractERC721IdOk returns a tuple with the ContractERC721Id field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetContractERC721IdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractERC721Id, true
}

// SetContractERC721Id sets field value
func (o *ProductERC721) SetContractERC721Id(v string) {
	o.ContractERC721Id = v
}

// GetTokenId returns the TokenId field value
func (o *ProductERC721) GetTokenId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetTokenIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *ProductERC721) SetTokenId(v float32) {
	o.TokenId = v
}

// GetTokenURI returns the TokenURI field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductERC721) GetTokenURI() string {
	if o == nil || o.TokenURI.Get() == nil {
		var ret string
		return ret
	}

	return *o.TokenURI.Get()
}

// GetTokenURIOk returns a tuple with the TokenURI field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductERC721) GetTokenURIOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenURI.Get(), o.TokenURI.IsSet()
}

// SetTokenURI sets field value
func (o *ProductERC721) SetTokenURI(v string) {
	o.TokenURI.Set(&v)
}

// GetCreatorAddress returns the CreatorAddress field value
func (o *ProductERC721) GetCreatorAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorAddress
}

// GetCreatorAddressOk returns a tuple with the CreatorAddress field value
// and a boolean to check if the value has been set.
func (o *ProductERC721) GetCreatorAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorAddress, true
}

// SetCreatorAddress sets field value
func (o *ProductERC721) SetCreatorAddress(v string) {
	o.CreatorAddress = v
}

// GetMetadata returns the Metadata field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *ProductERC721) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductERC721) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *ProductERC721) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetItemStockDocumentId returns the ItemStockDocumentId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductERC721) GetItemStockDocumentId() string {
	if o == nil || o.ItemStockDocumentId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ItemStockDocumentId.Get()
}

// GetItemStockDocumentIdOk returns a tuple with the ItemStockDocumentId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductERC721) GetItemStockDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemStockDocumentId.Get(), o.ItemStockDocumentId.IsSet()
}

// SetItemStockDocumentId sets field value
func (o *ProductERC721) SetItemStockDocumentId(v string) {
	o.ItemStockDocumentId.Set(&v)
}

// GetProductBlueprintId returns the ProductBlueprintId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductERC721) GetProductBlueprintId() string {
	if o == nil || o.ProductBlueprintId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductBlueprintId.Get()
}

// GetProductBlueprintIdOk returns a tuple with the ProductBlueprintId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductERC721) GetProductBlueprintIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductBlueprintId.Get(), o.ProductBlueprintId.IsSet()
}

// SetProductBlueprintId sets field value
func (o *ProductERC721) SetProductBlueprintId(v string) {
	o.ProductBlueprintId.Set(&v)
}

// GetProductGroupId returns the ProductGroupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductERC721) GetProductGroupId() string {
	if o == nil || o.ProductGroupId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProductGroupId.Get()
}

// GetProductGroupIdOk returns a tuple with the ProductGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductERC721) GetProductGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductGroupId.Get(), o.ProductGroupId.IsSet()
}

// SetProductGroupId sets field value
func (o *ProductERC721) SetProductGroupId(v string) {
	o.ProductGroupId.Set(&v)
}

func (o ProductERC721) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["createAt"] = o.CreateAt
	}
	if true {
		toSerialize["updateAt"] = o.UpdateAt
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["tokenStandardType"] = o.TokenStandardType
	}
	if true {
		toSerialize["contractERC721Id"] = o.ContractERC721Id
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	if true {
		toSerialize["tokenURI"] = o.TokenURI.Get()
	}
	if true {
		toSerialize["creatorAddress"] = o.CreatorAddress
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["itemStockDocumentId"] = o.ItemStockDocumentId.Get()
	}
	if true {
		toSerialize["productBlueprintId"] = o.ProductBlueprintId.Get()
	}
	if true {
		toSerialize["productGroupId"] = o.ProductGroupId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProductERC721 struct {
	value *ProductERC721
	isSet bool
}

func (v NullableProductERC721) Get() *ProductERC721 {
	return v.value
}

func (v *NullableProductERC721) Set(val *ProductERC721) {
	v.value = val
	v.isSet = true
}

func (v NullableProductERC721) IsSet() bool {
	return v.isSet
}

func (v *NullableProductERC721) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductERC721(val *ProductERC721) *NullableProductERC721 {
	return &NullableProductERC721{value: val, isSet: true}
}

func (v NullableProductERC721) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductERC721) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


