/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Item struct for Item
type Item struct {
	Id string `json:"id"`
	CreateAt time.Time `json:"createAt"`
	UpdateAt time.Time `json:"updateAt"`
	Name string `json:"name"`
	Description string `json:"description"`
	// Itemのプレビュー用URL
	Previews []PreviewMedia `json:"previews"`
	Type ItemType `json:"type"`
	StartAt time.Time `json:"startAt"`
	EndAt time.Time `json:"endAt"`
	Price float32 `json:"price"`
	CryptoCurrencyRate CryptoCurrencyRate `json:"cryptoCurrencyRate"`
	// Mintに支払われる取引手数料
	FeeRatePermill float32 `json:"feeRatePermill"`
	// 任意のTag
	Tags []string `json:"tags"`
	PaymentMethodData ItemPaymentMethodData `json:"paymentMethodData"`
	ItemStockIds []string `json:"itemStockIds"`
	AvailableStockNum float32 `json:"availableStockNum"`
	ProductERC721Ids []string `json:"productERC721Ids"`
	// オークションItem以外は空配列が入る
	Bids []Bid `json:"bids"`
	Metadata map[string]interface{} `json:"metadata"`
}

// NewItem instantiates a new Item object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItem(id string, createAt time.Time, updateAt time.Time, name string, description string, previews []PreviewMedia, type_ ItemType, startAt time.Time, endAt time.Time, price float32, cryptoCurrencyRate CryptoCurrencyRate, feeRatePermill float32, tags []string, paymentMethodData ItemPaymentMethodData, itemStockIds []string, availableStockNum float32, productERC721Ids []string, bids []Bid, metadata map[string]interface{}) *Item {
	this := Item{}
	this.Id = id
	this.CreateAt = createAt
	this.UpdateAt = updateAt
	this.Name = name
	this.Description = description
	this.Previews = previews
	this.Type = type_
	this.StartAt = startAt
	this.EndAt = endAt
	this.Price = price
	this.CryptoCurrencyRate = cryptoCurrencyRate
	this.FeeRatePermill = feeRatePermill
	this.Tags = tags
	this.PaymentMethodData = paymentMethodData
	this.ItemStockIds = itemStockIds
	this.AvailableStockNum = availableStockNum
	this.ProductERC721Ids = productERC721Ids
	this.Bids = bids
	this.Metadata = metadata
	return &this
}

// NewItemWithDefaults instantiates a new Item object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemWithDefaults() *Item {
	this := Item{}
	return &this
}

// GetId returns the Id field value
func (o *Item) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Item) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Item) SetId(v string) {
	o.Id = v
}

// GetCreateAt returns the CreateAt field value
func (o *Item) GetCreateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value
// and a boolean to check if the value has been set.
func (o *Item) GetCreateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateAt, true
}

// SetCreateAt sets field value
func (o *Item) SetCreateAt(v time.Time) {
	o.CreateAt = v
}

// GetUpdateAt returns the UpdateAt field value
func (o *Item) GetUpdateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdateAt
}

// GetUpdateAtOk returns a tuple with the UpdateAt field value
// and a boolean to check if the value has been set.
func (o *Item) GetUpdateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateAt, true
}

// SetUpdateAt sets field value
func (o *Item) SetUpdateAt(v time.Time) {
	o.UpdateAt = v
}

// GetName returns the Name field value
func (o *Item) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Item) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Item) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Item) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Item) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Item) SetDescription(v string) {
	o.Description = v
}

// GetPreviews returns the Previews field value
func (o *Item) GetPreviews() []PreviewMedia {
	if o == nil {
		var ret []PreviewMedia
		return ret
	}

	return o.Previews
}

// GetPreviewsOk returns a tuple with the Previews field value
// and a boolean to check if the value has been set.
func (o *Item) GetPreviewsOk() ([]PreviewMedia, bool) {
	if o == nil {
		return nil, false
	}
	return o.Previews, true
}

// SetPreviews sets field value
func (o *Item) SetPreviews(v []PreviewMedia) {
	o.Previews = v
}

// GetType returns the Type field value
func (o *Item) GetType() ItemType {
	if o == nil {
		var ret ItemType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Item) GetTypeOk() (*ItemType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Item) SetType(v ItemType) {
	o.Type = v
}

// GetStartAt returns the StartAt field value
func (o *Item) GetStartAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value
// and a boolean to check if the value has been set.
func (o *Item) GetStartAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartAt, true
}

// SetStartAt sets field value
func (o *Item) SetStartAt(v time.Time) {
	o.StartAt = v
}

// GetEndAt returns the EndAt field value
func (o *Item) GetEndAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value
// and a boolean to check if the value has been set.
func (o *Item) GetEndAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndAt, true
}

// SetEndAt sets field value
func (o *Item) SetEndAt(v time.Time) {
	o.EndAt = v
}

// GetPrice returns the Price field value
func (o *Item) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *Item) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *Item) SetPrice(v float32) {
	o.Price = v
}

// GetCryptoCurrencyRate returns the CryptoCurrencyRate field value
func (o *Item) GetCryptoCurrencyRate() CryptoCurrencyRate {
	if o == nil {
		var ret CryptoCurrencyRate
		return ret
	}

	return o.CryptoCurrencyRate
}

// GetCryptoCurrencyRateOk returns a tuple with the CryptoCurrencyRate field value
// and a boolean to check if the value has been set.
func (o *Item) GetCryptoCurrencyRateOk() (*CryptoCurrencyRate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CryptoCurrencyRate, true
}

// SetCryptoCurrencyRate sets field value
func (o *Item) SetCryptoCurrencyRate(v CryptoCurrencyRate) {
	o.CryptoCurrencyRate = v
}

// GetFeeRatePermill returns the FeeRatePermill field value
func (o *Item) GetFeeRatePermill() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FeeRatePermill
}

// GetFeeRatePermillOk returns a tuple with the FeeRatePermill field value
// and a boolean to check if the value has been set.
func (o *Item) GetFeeRatePermillOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeeRatePermill, true
}

// SetFeeRatePermill sets field value
func (o *Item) SetFeeRatePermill(v float32) {
	o.FeeRatePermill = v
}

// GetTags returns the Tags field value
func (o *Item) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *Item) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *Item) SetTags(v []string) {
	o.Tags = v
}

// GetPaymentMethodData returns the PaymentMethodData field value
func (o *Item) GetPaymentMethodData() ItemPaymentMethodData {
	if o == nil {
		var ret ItemPaymentMethodData
		return ret
	}

	return o.PaymentMethodData
}

// GetPaymentMethodDataOk returns a tuple with the PaymentMethodData field value
// and a boolean to check if the value has been set.
func (o *Item) GetPaymentMethodDataOk() (*ItemPaymentMethodData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethodData, true
}

// SetPaymentMethodData sets field value
func (o *Item) SetPaymentMethodData(v ItemPaymentMethodData) {
	o.PaymentMethodData = v
}

// GetItemStockIds returns the ItemStockIds field value
func (o *Item) GetItemStockIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ItemStockIds
}

// GetItemStockIdsOk returns a tuple with the ItemStockIds field value
// and a boolean to check if the value has been set.
func (o *Item) GetItemStockIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemStockIds, true
}

// SetItemStockIds sets field value
func (o *Item) SetItemStockIds(v []string) {
	o.ItemStockIds = v
}

// GetAvailableStockNum returns the AvailableStockNum field value
func (o *Item) GetAvailableStockNum() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvailableStockNum
}

// GetAvailableStockNumOk returns a tuple with the AvailableStockNum field value
// and a boolean to check if the value has been set.
func (o *Item) GetAvailableStockNumOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableStockNum, true
}

// SetAvailableStockNum sets field value
func (o *Item) SetAvailableStockNum(v float32) {
	o.AvailableStockNum = v
}

// GetProductERC721Ids returns the ProductERC721Ids field value
func (o *Item) GetProductERC721Ids() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProductERC721Ids
}

// GetProductERC721IdsOk returns a tuple with the ProductERC721Ids field value
// and a boolean to check if the value has been set.
func (o *Item) GetProductERC721IdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductERC721Ids, true
}

// SetProductERC721Ids sets field value
func (o *Item) SetProductERC721Ids(v []string) {
	o.ProductERC721Ids = v
}

// GetBids returns the Bids field value
func (o *Item) GetBids() []Bid {
	if o == nil {
		var ret []Bid
		return ret
	}

	return o.Bids
}

// GetBidsOk returns a tuple with the Bids field value
// and a boolean to check if the value has been set.
func (o *Item) GetBidsOk() ([]Bid, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bids, true
}

// SetBids sets field value
func (o *Item) SetBids(v []Bid) {
	o.Bids = v
}

// GetMetadata returns the Metadata field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *Item) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Item) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *Item) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o Item) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["createAt"] = o.CreateAt
	}
	if true {
		toSerialize["updateAt"] = o.UpdateAt
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["previews"] = o.Previews
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["startAt"] = o.StartAt
	}
	if true {
		toSerialize["endAt"] = o.EndAt
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["cryptoCurrencyRate"] = o.CryptoCurrencyRate
	}
	if true {
		toSerialize["feeRatePermill"] = o.FeeRatePermill
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["paymentMethodData"] = o.PaymentMethodData
	}
	if true {
		toSerialize["itemStockIds"] = o.ItemStockIds
	}
	if true {
		toSerialize["availableStockNum"] = o.AvailableStockNum
	}
	if true {
		toSerialize["productERC721Ids"] = o.ProductERC721Ids
	}
	if true {
		toSerialize["bids"] = o.Bids
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableItem struct {
	value *Item
	isSet bool
}

func (v NullableItem) Get() *Item {
	return v.value
}

func (v *NullableItem) Set(val *Item) {
	v.value = val
	v.isSet = true
}

func (v NullableItem) IsSet() bool {
	return v.isSet
}

func (v *NullableItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItem(val *Item) *NullableItem {
	return &NullableItem{value: val, isSet: true}
}

func (v NullableItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


