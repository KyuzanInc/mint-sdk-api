/*
 * sdk_api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 4.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2006Data struct for InlineResponse2006Data
type InlineResponse2006Data struct {
	ItemStocks []ItemStock `json:"itemStocks"`
}

// NewInlineResponse2006Data instantiates a new InlineResponse2006Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2006Data(itemStocks []ItemStock) *InlineResponse2006Data {
	this := InlineResponse2006Data{}
	this.ItemStocks = itemStocks
	return &this
}

// NewInlineResponse2006DataWithDefaults instantiates a new InlineResponse2006Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2006DataWithDefaults() *InlineResponse2006Data {
	this := InlineResponse2006Data{}
	return &this
}

// GetItemStocks returns the ItemStocks field value
func (o *InlineResponse2006Data) GetItemStocks() []ItemStock {
	if o == nil {
		var ret []ItemStock
		return ret
	}

	return o.ItemStocks
}

// GetItemStocksOk returns a tuple with the ItemStocks field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2006Data) GetItemStocksOk() (*[]ItemStock, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemStocks, true
}

// SetItemStocks sets field value
func (o *InlineResponse2006Data) SetItemStocks(v []ItemStock) {
	o.ItemStocks = v
}

func (o InlineResponse2006Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["itemStocks"] = o.ItemStocks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2006Data struct {
	value *InlineResponse2006Data
	isSet bool
}

func (v NullableInlineResponse2006Data) Get() *InlineResponse2006Data {
	return v.value
}

func (v *NullableInlineResponse2006Data) Set(val *InlineResponse2006Data) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2006Data) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2006Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2006Data(val *InlineResponse2006Data) *NullableInlineResponse2006Data {
	return &NullableInlineResponse2006Data{value: val, isSet: true}
}

func (v NullableInlineResponse2006Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2006Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


