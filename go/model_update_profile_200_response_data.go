/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateProfile200ResponseData struct for UpdateProfile200ResponseData
type UpdateProfile200ResponseData struct {
	Profile *WalletAddressProfile `json:"profile,omitempty"`
}

// NewUpdateProfile200ResponseData instantiates a new UpdateProfile200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProfile200ResponseData() *UpdateProfile200ResponseData {
	this := UpdateProfile200ResponseData{}
	return &this
}

// NewUpdateProfile200ResponseDataWithDefaults instantiates a new UpdateProfile200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProfile200ResponseDataWithDefaults() *UpdateProfile200ResponseData {
	this := UpdateProfile200ResponseData{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *UpdateProfile200ResponseData) GetProfile() WalletAddressProfile {
	if o == nil || o.Profile == nil {
		var ret WalletAddressProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProfile200ResponseData) GetProfileOk() (*WalletAddressProfile, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *UpdateProfile200ResponseData) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given WalletAddressProfile and assigns it to the Profile field.
func (o *UpdateProfile200ResponseData) SetProfile(v WalletAddressProfile) {
	o.Profile = &v
}

func (o UpdateProfile200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateProfile200ResponseData struct {
	value *UpdateProfile200ResponseData
	isSet bool
}

func (v NullableUpdateProfile200ResponseData) Get() *UpdateProfile200ResponseData {
	return v.value
}

func (v *NullableUpdateProfile200ResponseData) Set(val *UpdateProfile200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProfile200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProfile200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProfile200ResponseData(val *UpdateProfile200ResponseData) *NullableUpdateProfile200ResponseData {
	return &NullableUpdateProfile200ResponseData{value: val, isSet: true}
}

func (v NullableUpdateProfile200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProfile200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


