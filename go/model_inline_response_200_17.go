/*
 * sdk_api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 4.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20017 struct for InlineResponse20017
type InlineResponse20017 struct {
	Meta *map[string]interface{} `json:"meta,omitempty"`
	Data *InlineResponse20017Data `json:"data,omitempty"`
}

// NewInlineResponse20017 instantiates a new InlineResponse20017 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20017() *InlineResponse20017 {
	this := InlineResponse20017{}
	return &this
}

// NewInlineResponse20017WithDefaults instantiates a new InlineResponse20017 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20017WithDefaults() *InlineResponse20017 {
	this := InlineResponse20017{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *InlineResponse20017) GetMeta() map[string]interface{} {
	if o == nil || o.Meta == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20017) GetMetaOk() (*map[string]interface{}, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *InlineResponse20017) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *InlineResponse20017) SetMeta(v map[string]interface{}) {
	o.Meta = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *InlineResponse20017) GetData() InlineResponse20017Data {
	if o == nil || o.Data == nil {
		var ret InlineResponse20017Data
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20017) GetDataOk() (*InlineResponse20017Data, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *InlineResponse20017) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given InlineResponse20017Data and assigns it to the Data field.
func (o *InlineResponse20017) SetData(v InlineResponse20017Data) {
	o.Data = &v
}

func (o InlineResponse20017) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20017 struct {
	value *InlineResponse20017
	isSet bool
}

func (v NullableInlineResponse20017) Get() *InlineResponse20017 {
	return v.value
}

func (v *NullableInlineResponse20017) Set(val *InlineResponse20017) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20017) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20017) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20017(val *InlineResponse20017) *NullableInlineResponse20017 {
	return &NullableInlineResponse20017{value: val, isSet: true}
}

func (v NullableInlineResponse20017) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20017) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


