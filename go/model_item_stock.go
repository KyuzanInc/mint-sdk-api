/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ItemStock struct for ItemStock
type ItemStock struct {
	Id string `json:"id"`
	CreateAt time.Time `json:"createAt"`
	UpdateAt time.Time `json:"updateAt"`
	Status ItemStockStatus `json:"status"`
	ProductsData []ProductERC721 `json:"productsData"`
	Item Item `json:"item"`
}

// NewItemStock instantiates a new ItemStock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemStock(id string, createAt time.Time, updateAt time.Time, status ItemStockStatus, productsData []ProductERC721, item Item) *ItemStock {
	this := ItemStock{}
	this.Id = id
	this.CreateAt = createAt
	this.UpdateAt = updateAt
	this.Status = status
	this.ProductsData = productsData
	this.Item = item
	return &this
}

// NewItemStockWithDefaults instantiates a new ItemStock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemStockWithDefaults() *ItemStock {
	this := ItemStock{}
	return &this
}

// GetId returns the Id field value
func (o *ItemStock) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ItemStock) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ItemStock) SetId(v string) {
	o.Id = v
}

// GetCreateAt returns the CreateAt field value
func (o *ItemStock) GetCreateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value
// and a boolean to check if the value has been set.
func (o *ItemStock) GetCreateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateAt, true
}

// SetCreateAt sets field value
func (o *ItemStock) SetCreateAt(v time.Time) {
	o.CreateAt = v
}

// GetUpdateAt returns the UpdateAt field value
func (o *ItemStock) GetUpdateAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdateAt
}

// GetUpdateAtOk returns a tuple with the UpdateAt field value
// and a boolean to check if the value has been set.
func (o *ItemStock) GetUpdateAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateAt, true
}

// SetUpdateAt sets field value
func (o *ItemStock) SetUpdateAt(v time.Time) {
	o.UpdateAt = v
}

// GetStatus returns the Status field value
func (o *ItemStock) GetStatus() ItemStockStatus {
	if o == nil {
		var ret ItemStockStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ItemStock) GetStatusOk() (*ItemStockStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ItemStock) SetStatus(v ItemStockStatus) {
	o.Status = v
}

// GetProductsData returns the ProductsData field value
func (o *ItemStock) GetProductsData() []ProductERC721 {
	if o == nil {
		var ret []ProductERC721
		return ret
	}

	return o.ProductsData
}

// GetProductsDataOk returns a tuple with the ProductsData field value
// and a boolean to check if the value has been set.
func (o *ItemStock) GetProductsDataOk() ([]ProductERC721, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductsData, true
}

// SetProductsData sets field value
func (o *ItemStock) SetProductsData(v []ProductERC721) {
	o.ProductsData = v
}

// GetItem returns the Item field value
func (o *ItemStock) GetItem() Item {
	if o == nil {
		var ret Item
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *ItemStock) GetItemOk() (*Item, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *ItemStock) SetItem(v Item) {
	o.Item = v
}

func (o ItemStock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["createAt"] = o.CreateAt
	}
	if true {
		toSerialize["updateAt"] = o.UpdateAt
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["productsData"] = o.ProductsData
	}
	if true {
		toSerialize["item"] = o.Item
	}
	return json.Marshal(toSerialize)
}

type NullableItemStock struct {
	value *ItemStock
	isSet bool
}

func (v NullableItemStock) Get() *ItemStock {
	return v.value
}

func (v *NullableItemStock) Set(val *ItemStock) {
	v.value = val
	v.isSet = true
}

func (v NullableItemStock) IsSet() bool {
	return v.isSet
}

func (v *NullableItemStock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemStock(val *ItemStock) *NullableItemStock {
	return &NullableItemStock{value: val, isSet: true}
}

func (v NullableItemStock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemStock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


