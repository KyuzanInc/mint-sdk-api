/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetSignByItemStockId200ResponseData struct for GetSignByItemStockId200ResponseData
type GetSignByItemStockId200ResponseData struct {
	Signature string `json:"signature"`
	// 対応したコントラクトのメソッドに渡す
	ContractMethodArg []interface{} `json:"contractMethodArg"`
}

// NewGetSignByItemStockId200ResponseData instantiates a new GetSignByItemStockId200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSignByItemStockId200ResponseData(signature string, contractMethodArg []interface{}) *GetSignByItemStockId200ResponseData {
	this := GetSignByItemStockId200ResponseData{}
	this.Signature = signature
	this.ContractMethodArg = contractMethodArg
	return &this
}

// NewGetSignByItemStockId200ResponseDataWithDefaults instantiates a new GetSignByItemStockId200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSignByItemStockId200ResponseDataWithDefaults() *GetSignByItemStockId200ResponseData {
	this := GetSignByItemStockId200ResponseData{}
	return &this
}

// GetSignature returns the Signature field value
func (o *GetSignByItemStockId200ResponseData) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *GetSignByItemStockId200ResponseData) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *GetSignByItemStockId200ResponseData) SetSignature(v string) {
	o.Signature = v
}

// GetContractMethodArg returns the ContractMethodArg field value
func (o *GetSignByItemStockId200ResponseData) GetContractMethodArg() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.ContractMethodArg
}

// GetContractMethodArgOk returns a tuple with the ContractMethodArg field value
// and a boolean to check if the value has been set.
func (o *GetSignByItemStockId200ResponseData) GetContractMethodArgOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractMethodArg, true
}

// SetContractMethodArg sets field value
func (o *GetSignByItemStockId200ResponseData) SetContractMethodArg(v []interface{}) {
	o.ContractMethodArg = v
}

func (o GetSignByItemStockId200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["signature"] = o.Signature
	}
	if true {
		toSerialize["contractMethodArg"] = o.ContractMethodArg
	}
	return json.Marshal(toSerialize)
}

type NullableGetSignByItemStockId200ResponseData struct {
	value *GetSignByItemStockId200ResponseData
	isSet bool
}

func (v NullableGetSignByItemStockId200ResponseData) Get() *GetSignByItemStockId200ResponseData {
	return v.value
}

func (v *NullableGetSignByItemStockId200ResponseData) Set(val *GetSignByItemStockId200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSignByItemStockId200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSignByItemStockId200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSignByItemStockId200ResponseData(val *GetSignByItemStockId200ResponseData) *NullableGetSignByItemStockId200ResponseData {
	return &NullableGetSignByItemStockId200ResponseData{value: val, isSet: true}
}

func (v NullableGetSignByItemStockId200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSignByItemStockId200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


