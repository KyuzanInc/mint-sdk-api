/*
sdk_api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetAvatar200ResponseData struct for GetAvatar200ResponseData
type GetAvatar200ResponseData struct {
	ImageId string `json:"imageId"`
	UploadSignedUrl string `json:"uploadSignedUrl"`
	ReadSignedUrl string `json:"readSignedUrl"`
}

// NewGetAvatar200ResponseData instantiates a new GetAvatar200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAvatar200ResponseData(imageId string, uploadSignedUrl string, readSignedUrl string) *GetAvatar200ResponseData {
	this := GetAvatar200ResponseData{}
	this.ImageId = imageId
	this.UploadSignedUrl = uploadSignedUrl
	this.ReadSignedUrl = readSignedUrl
	return &this
}

// NewGetAvatar200ResponseDataWithDefaults instantiates a new GetAvatar200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAvatar200ResponseDataWithDefaults() *GetAvatar200ResponseData {
	this := GetAvatar200ResponseData{}
	return &this
}

// GetImageId returns the ImageId field value
func (o *GetAvatar200ResponseData) GetImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *GetAvatar200ResponseData) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *GetAvatar200ResponseData) SetImageId(v string) {
	o.ImageId = v
}

// GetUploadSignedUrl returns the UploadSignedUrl field value
func (o *GetAvatar200ResponseData) GetUploadSignedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadSignedUrl
}

// GetUploadSignedUrlOk returns a tuple with the UploadSignedUrl field value
// and a boolean to check if the value has been set.
func (o *GetAvatar200ResponseData) GetUploadSignedUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadSignedUrl, true
}

// SetUploadSignedUrl sets field value
func (o *GetAvatar200ResponseData) SetUploadSignedUrl(v string) {
	o.UploadSignedUrl = v
}

// GetReadSignedUrl returns the ReadSignedUrl field value
func (o *GetAvatar200ResponseData) GetReadSignedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReadSignedUrl
}

// GetReadSignedUrlOk returns a tuple with the ReadSignedUrl field value
// and a boolean to check if the value has been set.
func (o *GetAvatar200ResponseData) GetReadSignedUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReadSignedUrl, true
}

// SetReadSignedUrl sets field value
func (o *GetAvatar200ResponseData) SetReadSignedUrl(v string) {
	o.ReadSignedUrl = v
}

func (o GetAvatar200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageId"] = o.ImageId
	}
	if true {
		toSerialize["uploadSignedUrl"] = o.UploadSignedUrl
	}
	if true {
		toSerialize["readSignedUrl"] = o.ReadSignedUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGetAvatar200ResponseData struct {
	value *GetAvatar200ResponseData
	isSet bool
}

func (v NullableGetAvatar200ResponseData) Get() *GetAvatar200ResponseData {
	return v.value
}

func (v *NullableGetAvatar200ResponseData) Set(val *GetAvatar200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAvatar200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAvatar200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAvatar200ResponseData(val *GetAvatar200ResponseData) *NullableGetAvatar200ResponseData {
	return &NullableGetAvatar200ResponseData{value: val, isSet: true}
}

func (v NullableGetAvatar200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAvatar200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


