/*
 * sdk_api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 4.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2002Data struct for InlineResponse2002Data
type InlineResponse2002Data struct {
	ItemStockId string `json:"itemStockId"`
}

// NewInlineResponse2002Data instantiates a new InlineResponse2002Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002Data(itemStockId string) *InlineResponse2002Data {
	this := InlineResponse2002Data{}
	this.ItemStockId = itemStockId
	return &this
}

// NewInlineResponse2002DataWithDefaults instantiates a new InlineResponse2002Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002DataWithDefaults() *InlineResponse2002Data {
	this := InlineResponse2002Data{}
	return &this
}

// GetItemStockId returns the ItemStockId field value
func (o *InlineResponse2002Data) GetItemStockId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemStockId
}

// GetItemStockIdOk returns a tuple with the ItemStockId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Data) GetItemStockIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ItemStockId, true
}

// SetItemStockId sets field value
func (o *InlineResponse2002Data) SetItemStockId(v string) {
	o.ItemStockId = v
}

func (o InlineResponse2002Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["itemStockId"] = o.ItemStockId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002Data struct {
	value *InlineResponse2002Data
	isSet bool
}

func (v NullableInlineResponse2002Data) Get() *InlineResponse2002Data {
	return v.value
}

func (v *NullableInlineResponse2002Data) Set(val *InlineResponse2002Data) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002Data) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002Data(val *InlineResponse2002Data) *NullableInlineResponse2002Data {
	return &NullableInlineResponse2002Data{value: val, isSet: true}
}

func (v NullableInlineResponse2002Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


